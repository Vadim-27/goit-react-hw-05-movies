{"version":3,"file":"static/js/642.b7eaf530.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,gCACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAY,mCAAG,WAAOC,GAAP,yFACHN,EAASO,IAAI,eAAgB,CAC9CJ,OAAQ,CACJG,MAAAA,KAHgB,uBACjBE,EADiB,EACjBA,KAMPC,QAAQC,IAAIF,EAAM,OAPM,kBAQjBA,GARiB,2CAAH,sDAWZG,EAAc,mCAAG,sGACHX,EAASO,IAAI,iBADV,uBAClBC,EADkB,EAClBA,KACRC,QAAQC,IAAIF,EAAM,gEAFQ,kBAGnBA,GAHmB,2CAAH,qDAOdI,EAAY,mCAAG,WAAMC,GAAN,yFACHb,EAASO,IAAT,gBAAsBM,IADnB,uBAClBL,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAMZM,EAAW,mCAAG,WAAMD,GAAN,yFACAb,EAASO,IAAT,iBAAuBM,EAAvB,aADA,uBACfL,EADe,EACfA,KACRC,QAAQC,IAAIF,EAAM,gEAFK,kBAGlBA,GAHkB,2CAAH,sDAMXO,EAAc,mCAAG,WAAMF,GAAN,yFACHb,EAASO,IAAT,iBAAuBM,EAAvB,aADG,uBAClBL,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qD,yGCQ3B,UA1CoB,WAEpB,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACJ,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAkBC,EAAlB,KACAf,QAAQC,IAAIS,EAAS,YAErBM,EAAAA,EAAAA,YAAU,WACRD,GAAW,GACT,IAAME,EAAY,mCAAG,8GACMX,EAAAA,EAAAA,IAAeC,GADrB,OACPR,EADO,OAEbY,EAAWZ,EAAKmB,SAFH,gDAKbL,EAAS,EAAD,IALK,yBAObE,GAAW,GAPE,4EAAH,qDAWlBE,GACH,GAAE,CAACV,IAEJ,IAAMY,EAAWT,EAAQU,KAAI,YAA8B,IAA3BhB,EAA0B,EAA1BA,GAAIiB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACxC,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFGlB,EAKd,IAGD,OACE,gCACGQ,IAAS,yCACTE,IAAa,sCACI,IAAjBJ,EAAQa,SAAY,wBAAKJ,MAGjC,C","sources":["components/shared/services/movies-api.js","pages/ReviewsPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: 'd91911ebb88751cf9e5c4b8fdf4412c9',\n    }\n})\n\nexport const searchMovies = async (query) => {\n    const {data} = await instance.get('search/movie', {\n        params: {\n            query,\n           \n        }\n    })\n    console.log(data, \"api\")\n    return data;\n}\n\nexport const getMostPopular = async () => {\n    const { data } = await instance.get('movie/popular')\n    console.log(data, \"популярніе\")\n    return data;\n}\n\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n}\n\n\nexport const getCastById = async id => {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    console.log(data, \"популярніе\")\n  return data;\n};\n\nexport const getReviewsById = async id => {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data;\n}\n","import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getReviewsById } from \"components/shared/services/movies-api\";\n\nconst ReviewsPage = () => {\n\nconst { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [error, setError] = useState('');\n    const [isLoading, setLoading] = useState(false);\n    console.log(reviews, 'reviews');\n    \n    useEffect(() => {\n      setLoading(true);\n        const fetchReviews = async () => {\n            try{const data = await getReviewsById(movieId);\n                setReviews(data.results)\n            }\n            catch (error) {\n                setError(error);\n            } finally {\n                setLoading(false);\n            }\n          \n        };\n        fetchReviews();\n    }, [movieId]);\n\n    const elements = reviews.map(({ id, author, content }) => {\n        return (\n          <li key={id}>\n            <h4>{author}</h4>\n            <p>{content}</p>\n          </li>\n        );\n    });\n\n\n    return (\n      <>\n        {error && <p>error message</p>}\n        {isLoading && <p>...Loading</p>}\n        {reviews.length!==0&&<ul>{elements}</ul>}\n      </>\n    );\n}\nexport default ReviewsPage;\n"],"names":["instance","axios","baseURL","params","api_key","searchMovies","query","get","data","console","log","getMostPopular","getMovieById","id","getCastById","getReviewsById","movieId","useParams","useState","reviews","setReviews","error","setError","isLoading","setLoading","useEffect","fetchReviews","results","elements","map","author","content","length"],"sourceRoot":""}