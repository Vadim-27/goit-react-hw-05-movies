{"version":3,"file":"static/js/739.abbb9e03.chunk.js","mappings":"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","sources":["components/shared/services/movies-api.js","webpack://react-homework-template/./src/pages/MoviesDeteilsPage/movies-deteils-page.module.css?09dd","pages/MoviesDeteilsPage/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: 'd91911ebb88751cf9e5c4b8fdf4412c9',\n    }\n})\n\nexport const searchMovies = async (query) => {\n    const {data} = await instance.get('search/movie', {\n        params: {\n            query,\n           \n        }\n    })\n    console.log(data, \"api\")\n    return data;\n}\n\nexport const getMostPopular = async () => {\n    const { data } = await instance.get('movie/popular')\n    console.log(data, \"популярніе\")\n    return data;\n}\n\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n}\n\n\nexport const getCastById = async id => {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    console.log(data, \"популярніе\")\n  return data;\n};\n\nexport const getReviewsById = async id => {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"singleMovieBox\":\"movies-deteils-page_singleMovieBox__GSBLM\"};","\nimport { useEffect, useState } from 'react';\nimport { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\n\nimport { useLocation } from 'react-router-dom';\n\nimport { getMovieById } from 'components/shared/services/movies-api';\nimport { Outlet } from 'react-router-dom';\nimport css from \"./movies-deteils-page.module.css\"\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n    const location = useLocation();\n    console.log(location, \"location\");\n    const navigate = useNavigate();\n\n  const from = location.state?.from ?? '/';\n\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState('');\n  const [rating, setRating] = useState(0);\n  const [genres, setGenres] = useState('');\n  const [year, setYear] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    \n \n    \n  \n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchMovie = async () => {\n      try {\n        const result = await getMovieById(movieId);\n        console.log(result);\n        setMovie(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n \n  useEffect(() => {\n      if (movie.length !== 0) {\n          console.log(movie.vote_average);\n          const rating = (movie.vote_average * 10).toFixed();\n          setRating(rating);\n    \n          const genresList = movie.genres;\n\n      \n          const takeGenre = genresList.map(item => item.name).join(', ');\n          setGenres(takeGenre);\n          const releaseDate = movie.release_date.slice(0, 4);\n          setYear(releaseDate);\n      }\n}, [movie]);\n    const goBack = useCallback(() => navigate(from), [navigate, from]);\n    \n  return (\n    <>\n      {isLoading && <p>loading</p>}\n      {error && <p>error</p>}\n      <button onClick={goBack}> Go back</button>\n      <div className={css.singleMovieBox}>\n        <div>\n          {movie.backdrop_path ? (\n            <img\n              src={`https://www.themoviedb.org/t/p/w300_and_h450_bestv2${movie.backdrop_path}`}\n              alt=\"\"\n            />\n          ) : (\n            <img src={`https://picsum.photos/id/237/320/240`} alt=\"\" />\n          )}\n        </div>\n        <div>\n          <h2>\n            {movie?.original_title}\n            <span>{year}</span>\n          </h2>\n          <p>\n            User score:\n            <span>{rating}%</span>\n          </p>\n          <h3>Overview</h3>\n          <p> {movie?.overview}</p>\n          <h3>Genres</h3>\n          <p>{genres}</p>\n        </div>\n      </div>\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from }}>\n              cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from }}>\n              reviews\n            </Link>\n\n            <Outlet />\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["instance","axios","baseURL","params","api_key","searchMovies","query","get","data","console","log","getMostPopular","getMovieById","id","getCastById","getReviewsById","movieId","useParams","location","useLocation","navigate","useNavigate","from","state","useState","movie","setMovie","error","setError","rating","setRating","genres","setGenres","year","setYear","isLoading","setIsLoading","useEffect","fetchMovie","result","length","vote_average","toFixed","takeGenre","map","item","name","join","releaseDate","release_date","slice","goBack","useCallback","onClick","className","css","backdrop_path","src","alt","original_title","overview","to"],"sourceRoot":""}