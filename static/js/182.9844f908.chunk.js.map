{"version":3,"file":"static/js/182.9844f908.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,gCACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAY,mCAAG,WAAOC,GAAP,yFACHN,EAASO,IAAI,eAAgB,CAC9CJ,OAAQ,CACJG,MAAAA,KAHgB,uBACjBE,EADiB,EACjBA,KADiB,kBAQjBA,GARiB,2CAAH,sDAWZC,EAAc,mCAAG,sGACHT,EAASO,IAAI,iBADV,uBAClBC,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,qDAOdE,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASO,IAAT,gBAAsBI,IADnB,uBAClBH,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAMZI,EAAW,mCAAG,WAAMD,GAAN,yFACAX,EAASO,IAAT,iBAAuBI,EAAvB,aADA,uBACfH,EADe,EACfA,KADe,kBAGlBA,GAHkB,2CAAH,sDAMXK,EAAc,mCAAG,WAAMF,GAAN,yFACHX,EAASO,IAAT,iBAAuBI,EAAvB,aADG,uBAClBH,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qD,8ICtC3B,EAAiC,kC,SC6CjC,EA7CkB,SAAC,GAAe,IAAbM,EAAY,EAAZA,MAEjBC,EAMED,EANFC,aACAC,EAKEF,EALFE,OACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,cACAC,EAEEL,EAFFK,SACAC,EACEN,EADFM,eAGIC,GAAyB,GAAfN,GAAmBO,UAE7BC,EAAYP,EAAOQ,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,MAE/CC,EAAcX,EAAaY,MAAM,EAAG,GAE1C,OACE,iBAAKC,UAAWC,EAAhB,WACE,yBACGb,GACC,gBACEc,IAAG,6DAAwDd,GAC3De,IAAI,MAGN,gBAAKD,IAAG,uCAA0CC,IAAI,QAG1D,4BACE,0BACGb,GACD,0BAAOQ,QAET,wCAEE,4BAAOP,EAAP,WAEF,sCACA,6BAAKF,MACL,oCACA,uBAAII,SAIX,ECsBD,EAzDqB,WAAO,IAAD,IACjBW,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAI,oBAAGJ,EAASK,aAAZ,aAAG,EAAgBD,YAAnB,QAA2B,IAErC,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAO5B,EAAP,KAAc6B,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAU,mCAAG,8GAEMvC,EAAAA,EAAAA,IAAawB,GAFnB,OAETgB,EAFS,OAIfP,EAASO,GAJM,gDAMfL,EAAS,EAAD,IANO,yBAQfE,GAAa,GARE,4EAAH,qDAWhBE,GACD,GAAE,CAACf,IAEJ,IAAMiB,GAASC,EAAAA,EAAAA,cAAY,kBAAMd,EAASE,EAAf,GAAsB,CAACF,EAAUE,IAE5D,OACE,gCACGM,IAAa,mCACbF,IAAS,kCACV,mBAAQS,QAASF,EAAjB,sBAEkB,IAAjBrC,EAAMwC,SAAgB,SAAC,EAAD,CAAWxC,MAAOA,KACzC,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMyC,GAAG,OAAOd,MAAO,CAAED,KAAAA,GAAzB,qBAIF,2BACE,SAAC,KAAD,CAAMe,GAAG,UAAUd,MAAO,CAAED,KAAAA,GAA5B,sBAIA,SAAC,KAAD,eAMX,C","sources":["components/shared/services/movies-api.js","webpack://react-homework-template/./src/modules/MovieCard/movieCard.module.css?8fb6","modules/MovieCard/MovieCard.jsx","pages/MoviesDeteilsPage/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: 'd91911ebb88751cf9e5c4b8fdf4412c9',\n    }\n})\n\nexport const searchMovies = async (query) => {\n    const {data} = await instance.get('search/movie', {\n        params: {\n            query,\n           \n        }\n    })\n   \n    return data;\n}\n\nexport const getMostPopular = async () => {\n    const { data } = await instance.get('movie/popular')\n    \n    return data;\n}\n\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n}\n\n\nexport const getCastById = async id => {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    \n  return data;\n};\n\nexport const getReviewsById = async id => {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"singleMovieBox\":\"movieCard_singleMovieBox__zkYLw\"};","import css from './movieCard.module.css';\nconst MovieCard = ({ movie }) => {\n  const {\n    vote_average,\n    genres,\n    release_date,\n    backdrop_path,\n    overview,\n    original_title,\n  } = movie;\n\n  const rating = (vote_average * 10).toFixed();\n\n  const takeGenre = genres.map(item => item.name).join(', ');\n\n  const releaseDate = release_date.slice(0, 4);\n\n  return (\n    <div className={css.singleMovieBox}>\n      <div>\n        {backdrop_path ? (\n          <img\n            src={`https://www.themoviedb.org/t/p/w300_and_h450_bestv2${backdrop_path}`}\n            alt=\"\"\n          />\n        ) : (\n          <img src={`https://picsum.photos/id/237/320/240`} alt=\"\" />\n        )}\n      </div>\n      <div>\n        <h2>\n          {original_title}\n          <span>{releaseDate}</span>\n        </h2>\n        <p>\n          User score:\n          <span>{rating}%</span>\n        </p>\n        <h3>Overview</h3>\n        <p> {overview}</p>\n        <h3>Genres</h3>\n        <p>{takeGenre}</p>\n      </div>\n    </div>\n  );\n};\nexport default MovieCard;\n","import { useEffect, useState } from 'react';\nimport { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { getMovieById } from 'components/shared/services/movies-api';\nimport { Outlet } from 'react-router-dom';\nimport MovieCard from 'modules/MovieCard/MovieCard';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const navigate = useNavigate();\n\n  const from = location.state?.from ?? '/';\n\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchMovie = async () => {\n      try {\n        const result = await getMovieById(movieId);\n\n        setMovie(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  const goBack = useCallback(() => navigate(from), [navigate, from]);\n\n  return (\n    <>\n      {isLoading && <p>loading</p>}\n      {error && <p>error</p>}\n      <button onClick={goBack}> Go back</button>\n\n      {movie.length !== 0 && <MovieCard movie={movie} />}\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from }}>\n              cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from }}>\n              reviews\n            </Link>\n\n            <Outlet />\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["instance","axios","baseURL","params","api_key","searchMovies","query","get","data","getMostPopular","getMovieById","id","getCastById","getReviewsById","movie","vote_average","genres","release_date","backdrop_path","overview","original_title","rating","toFixed","takeGenre","map","item","name","join","releaseDate","slice","className","css","src","alt","movieId","useParams","location","useLocation","navigate","useNavigate","from","state","useState","setMovie","error","setError","isLoading","setIsLoading","useEffect","fetchMovie","result","goBack","useCallback","onClick","length","to"],"sourceRoot":""}