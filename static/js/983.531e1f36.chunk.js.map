{"version":3,"file":"static/js/983.531e1f36.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,gCACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAY,mCAAG,WAAOC,GAAP,yFACHN,EAASO,IAAI,eAAgB,CAC9CJ,OAAQ,CACJG,MAAAA,KAHgB,uBACjBE,EADiB,EACjBA,KAMPC,QAAQC,IAAIF,EAAM,OAPM,kBAQjBA,GARiB,2CAAH,sDAWZG,EAAc,mCAAG,sGACHX,EAASO,IAAI,iBADV,uBAClBC,EADkB,EAClBA,KACRC,QAAQC,IAAIF,EAAM,gEAFQ,kBAGnBA,GAHmB,2CAAH,qDAOdI,EAAY,mCAAG,WAAMC,GAAN,yFACHb,EAASO,IAAT,gBAAsBM,IADnB,uBAClBL,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAMZM,EAAW,mCAAG,WAAMD,GAAN,yFACAb,EAASO,IAAT,iBAAuBM,EAAvB,aADA,uBACfL,EADe,EACfA,KACRC,QAAQC,IAAIF,EAAM,gEAFK,kBAGlBA,GAHkB,2CAAH,sDAMXO,EAAc,mCAAG,WAAMF,GAAN,yFACHb,EAASO,IAAT,iBAAuBM,EAAvB,aADG,uBAClBL,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qD,2ECtC3B,EAAuB,yBAAvB,EAAuD,yB,SCMjDQ,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAWH,EAAMI,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACzB,SAAC,KAAD,CACEC,UAAWC,EAEXC,GAAE,kBAAab,GACfc,MAAO,CAAEC,KAAMV,GAJjB,UAME,yBACE,uBAAII,GAASC,OALVV,EAHkB,IAa3B,OAAO,eAAIW,UAAWC,EAAf,SAA0BL,GACpC,EACD,IAEAJ,EAAUa,aAAe,CACvBZ,MAAO,G,kHCQT,UA9BiB,WACf,OAA0Ba,EAAAA,EAAAA,UAAS,MAAnC,eAAOb,EAAP,KAAcc,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAW,mCAAG,8GAEG1B,EAAAA,EAAAA,MAFH,OAEVH,EAFU,OAGhBuB,GAAS,OAAIvB,EAAK8B,UAHF,gDAKhBL,EAAS,EAAD,IALQ,yBAOhBE,GAAa,GAPG,4EAAH,qDAUjBE,GACD,GAAE,KAGD,iCACE,kDACCH,IAAa,mCACbF,IAAS,iCACTf,IAAS,SAAC,IAAD,CAAWA,MAAOA,MAGjC,C","sources":["components/shared/services/movies-api.js","webpack://react-homework-template/./src/modules/MovieList/movie-list.module.css?7d98","modules/MovieList/MovieList.jsx","pages/HomePage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: 'd91911ebb88751cf9e5c4b8fdf4412c9',\n    }\n})\n\nexport const searchMovies = async (query) => {\n    const {data} = await instance.get('search/movie', {\n        params: {\n            query,\n           \n        }\n    })\n    console.log(data, \"api\")\n    return data;\n}\n\nexport const getMostPopular = async () => {\n    const { data } = await instance.get('movie/popular')\n    console.log(data, \"популярніе\")\n    return data;\n}\n\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n}\n\n\nexport const getCastById = async id => {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    console.log(data, \"популярніе\")\n  return data;\n};\n\nexport const getReviewsById = async id => {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movie-list_list__h0XkG\",\"item\":\"movie-list_item__DcRFB\"};","\nimport { Link } from \"react-router-dom\"\nimport { useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\"\nimport css from \"./movie-list.module.css\"\n\n\nconst MovieList = ({ items }) => {\n    const location = useLocation();\n    const elements = items.map(({ id, title, name }) => (\n      <Link\n        className={css.item}\n        key={id}\n        to={`/movies/${id}`}\n        state={{ from: location }}\n      >\n        <li>\n          <p>{title || name}</p>\n        </li>\n      </Link>\n    ));\n\n    return <ul className={css.list}>{elements}</ul>;\n}\nexport default MovieList;\n\nMovieList.defaultProps = {\n  items: [],\n}\n\nMovieList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport MovieList from 'modules/MovieList/MovieList';\nimport { getMostPopular } from 'components/shared/services/movies-api';\n\nconst HomePage = () => {\n  const [items, setItems] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchMovies = async () => {\n      try {\n        const data = await getMostPopular();\n        setItems([...data.results]);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending movies today</h1>\n      {isLoading && <p>loading</p>}\n      {error && <p>error</p>}\n      {items && <MovieList items={items} />}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["instance","axios","baseURL","params","api_key","searchMovies","query","get","data","console","log","getMostPopular","getMovieById","id","getCastById","getReviewsById","MovieList","items","location","useLocation","elements","map","title","name","className","css","to","state","from","defaultProps","useState","setItems","error","setError","isLoading","setIsLoading","useEffect","fetchMovies","results"],"sourceRoot":""}